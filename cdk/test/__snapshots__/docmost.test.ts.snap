// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot testing Snapshot testing for DocmostStack 1`] = `
{
  "Outputs": {
    "LoadBalancerDns": {
      "Value": {
        "Fn::GetAtt": [
          "Alb6F14D334",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Alb6F14D334": {
      "DependsOn": [
        "VpcdocmostalbpublicSubnet1DefaultRoute02BA0EF9",
        "VpcdocmostalbpublicSubnet1RouteTableAssociation365EBB9B",
        "VpcdocmostalbpublicSubnet2DefaultRouteB9ADC6AE",
        "VpcdocmostalbpublicSubnet2RouteTableAssociation64E2E566",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Name": "docmost-alb",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "SecurityGroupAlbSecurityGroupAEED2457",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VpcdocmostalbpublicSubnet1SubnetFC575E94",
          },
          {
            "Ref": "VpcdocmostalbpublicSubnet2Subnet548F5D83",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbAlbListener32D2AA93": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": "arn:aws:acm:ap-northeast-1:481665121106:certificate/9c6e668b-3080-48f0-8f5a-8b0e60ce09cb",
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "AlbAlbListenerEcsGroup735ADCBF",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "Alb6F14D334",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AlbAlbListenerEcsGroup735ADCBF": {
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/health",
        "HealthCheckPort": "3000",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 3,
        "Port": 3000,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 3,
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "AlbAlbTargetGroupF7529592": {
      "Properties": {
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/health",
        "HealthCheckPort": "3000",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 3,
        "Name": "docmost-alb-tg",
        "Port": 3000,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 3,
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "DocmostStackRdsRdsPrimaryInstanceSecret80E543DF3fdaad7efa858a3daf9490cf0a702aeb": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{"username":"docmost_user"}",
        },
        "Name": "/docmost/rds/",
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "EcsFargateEcsClusterB2CE2D35": {
      "Properties": {
        "ClusterName": "docmost-cluster",
      },
      "Type": "AWS::ECS::Cluster",
    },
    "EcsFargateEcsFargateServiceCDBF191C": {
      "DependsOn": [
        "AlbAlbListenerEcsGroup735ADCBF",
        "AlbAlbListener32D2AA93",
        "EcsFargateEcsTaskDefinitionEcsContainerLogGroupCC463CB4",
        "EcsFargateEcsTaskDefinitionExecutionRoleDefaultPolicyD7AEFFE6",
        "EcsFargateEcsTaskDefinitionExecutionRoleBED261F2",
        "EcsFargateEcsTaskDefinition1BE41C5D",
        "EcsFargateEcsTaskDefinitionTaskRoleC4B5302F",
      ],
      "Properties": {
        "Cluster": {
          "Ref": "EcsFargateEcsClusterB2CE2D35",
        },
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "EcsContainer",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "AlbAlbListenerEcsGroup735ADCBF",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "SecurityGroupEcsSecurityGroup292FFA35",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Ref": "VpcdocmostecsegressSubnet1Subnet612D76E4",
              },
              {
                "Ref": "VpcdocmostecsegressSubnet2SubnetB64E2924",
              },
            ],
          },
        },
        "TaskDefinition": "DocmostStackEcsFargateEcsTaskDefinitionA0C574C0",
      },
      "Type": "AWS::ECS::Service",
    },
    "EcsFargateEcsTaskDefinition1BE41C5D": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "DATABASE_URL",
                "Value": "postgresql://{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:481665121106:secret:/docmost/rds/-NaFopK:SecretString:username::}}:{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:481665121106:secret:/docmost/rds/-NaFopK:SecretString:password::}}@{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:481665121106:secret:/docmost/rds/-NaFopK:SecretString:host::}}:{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:481665121106:secret:/docmost/rds/-NaFopK:SecretString:port::}}/{{resolve:secretsmanager:arn:aws:secretsmanager:ap-northeast-1:481665121106:secret:/docmost/rds/-NaFopK:SecretString:dbname::}}?schema=public&sslmode=require",
              },
              {
                "Name": "APP_URL",
                "Value": "https://hayato-shiina.jp",
              },
              {
                "Name": "APP_SECRET",
                "Value": "57b52e5307a23e69eda5b4f027938883d664430bf7498e315e191af49a8933aa",
              },
              {
                "Name": "REDIS_URL",
                "Value": "redis://docmost-redis-8xx9nl.serverless.apne1.cache.amazonaws.com:6379",
              },
            ],
            "Essential": true,
            "Image": "docmost/docmost:0.6.2",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsFargateEcsTaskDefinitionEcsContainerLogGroupCC463CB4",
                },
                "awslogs-region": "ap-northeast-1",
                "awslogs-stream-prefix": "ecs-fargate",
              },
            },
            "Name": "EcsContainer",
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "HostPort": 3000,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "EcsFargateEcsTaskDefinitionExecutionRoleBED261F2",
            "Arn",
          ],
        },
        "Family": "DocmostStackEcsFargateEcsTaskDefinitionA0C574C0",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EcsFargateEcsTaskDefinitionTaskRoleC4B5302F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EcsFargateEcsTaskDefinitionEcsContainerLogGroupCC463CB4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "EcsFargateEcsTaskDefinitionExecutionRoleBED261F2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsFargateEcsTaskDefinitionExecutionRoleDefaultPolicyD7AEFFE6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsFargateEcsTaskDefinitionEcsContainerLogGroupCC463CB4",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsFargateEcsTaskDefinitionExecutionRoleDefaultPolicyD7AEFFE6",
        "Roles": [
          {
            "Ref": "EcsFargateEcsTaskDefinitionExecutionRoleBED261F2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsFargateEcsTaskDefinitionTaskRoleC4B5302F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RdsDocmostRdsParameterGroup96E1F884": {
      "Properties": {
        "Description": "Parameter group for postgres16",
        "Family": "postgres16",
        "Parameters": {
          "rds.force_ssl": "0",
        },
      },
      "Type": "AWS::RDS::DBParameterGroup",
    },
    "RdsRdsPrimaryInstance12972F7B": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AllocatedStorage": "100",
        "AvailabilityZone": "ap-northeast-1a",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.micro",
        "DBName": "docmost",
        "DBParameterGroupName": {
          "Ref": "RdsDocmostRdsParameterGroup96E1F884",
        },
        "DBSubnetGroupName": {
          "Ref": "RdsRdsPrimaryInstanceSubnetGroupCDA7B191",
        },
        "Engine": "postgres",
        "EngineVersion": "16.6",
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "DocmostStackRdsRdsPrimaryInstanceSecret80E543DF3fdaad7efa858a3daf9490cf0a702aeb",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "docmost_user",
        "NetworkType": "IPV4",
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "SecurityGroupRdsSecurityGroupEBEFFA8C",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "RdsRdsPrimaryInstanceSecretAttachment45F9E917": {
      "Properties": {
        "SecretId": {
          "Ref": "DocmostStackRdsRdsPrimaryInstanceSecret80E543DF3fdaad7efa858a3daf9490cf0a702aeb",
        },
        "TargetId": {
          "Ref": "RdsRdsPrimaryInstance12972F7B",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "RdsRdsPrimaryInstanceSubnetGroupCDA7B191": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for RdsPrimaryInstance database",
        "SubnetIds": [
          {
            "Ref": "VpcdocmostrdsisolatedSubnet1Subnet2BB5246C",
          },
          {
            "Ref": "VpcdocmostrdsisolatedSubnet2Subnet9A4751A4",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "RdsRdsReadReplica45FD0888": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AvailabilityZone": "ap-northeast-1c",
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.micro",
        "DBParameterGroupName": {
          "Ref": "RdsDocmostRdsParameterGroup96E1F884",
        },
        "DBSubnetGroupName": {
          "Ref": "RdsRdsReadReplicaSubnetGroup15E6A50D",
        },
        "NetworkType": "IPV4",
        "PubliclyAccessible": false,
        "SourceDBInstanceIdentifier": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":rds:ap-northeast-1:481665121106:db:",
              {
                "Ref": "RdsRdsPrimaryInstance12972F7B",
              },
            ],
          ],
        },
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "SecurityGroupRdsSecurityGroupEBEFFA8C",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "RdsRdsReadReplicaSubnetGroup15E6A50D": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for RdsReadReplica database",
        "SubnetIds": [
          {
            "Ref": "VpcdocmostrdsisolatedSubnet1Subnet2BB5246C",
          },
          {
            "Ref": "VpcdocmostrdsisolatedSubnet2Subnet9A4751A4",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "Redis04B3B4F3": {
      "Properties": {
        "Engine": "redis",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "SecurityGroupRedisSecurityGroupC4CB74C2",
              "GroupId",
            ],
          },
        ],
        "ServerlessCacheName": "docmost-redis",
        "SubnetIds": [
          {
            "Ref": "VpcdocmostredisisolatedSubnet1SubnetD8CA56D5",
          },
          {
            "Ref": "VpcdocmostredisisolatedSubnet2SubnetFCD71DBC",
          },
        ],
      },
      "Type": "AWS::ElastiCache::ServerlessCache",
    },
    "SecurityGroupAlbSecurityGroupAEED2457": {
      "Properties": {
        "GroupDescription": "Allow HTTP and HTTPS inbound traffic. Allow all outbound traffic.",
        "GroupName": "docmost-alb-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTPS inbound traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SecurityGroupEcsSecurityGroup292FFA35": {
      "Properties": {
        "GroupDescription": "Allow HTTP inbound traffic. Allow all outbound traffic.",
        "GroupName": "docmost-ecs-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SecurityGroupEcsSecurityGroupfromDocmostStackSecurityGroupAlbSecurityGroup0FF335223000862269B4": {
      "Properties": {
        "Description": "Allow HTTP inbound traffic",
        "FromPort": 3000,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroupEcsSecurityGroup292FFA35",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SecurityGroupAlbSecurityGroupAEED2457",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SecurityGroupRdsSecurityGroupEBEFFA8C": {
      "Properties": {
        "GroupDescription": "Allow PostgreSQL inbound traffic. Allow all outbound traffic.",
        "GroupName": "docmost-rds-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SecurityGroupRdsSecurityGroupfromDocmostStackSecurityGroupEcsSecurityGroup0FF8B32F5432DE7872F8": {
      "Properties": {
        "Description": "Allow PostgreSQL inbound traffic",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroupRdsSecurityGroupEBEFFA8C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SecurityGroupEcsSecurityGroup292FFA35",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "SecurityGroupRedisSecurityGroupC4CB74C2": {
      "Properties": {
        "GroupDescription": "Allow Redis inbound traffic. Allow all outbound traffic.",
        "GroupName": "docmost-redis-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "SecurityGroupRedisSecurityGroupfromDocmostStackSecurityGroupEcsSecurityGroup0FF8B32F637911965566": {
      "Properties": {
        "Description": "Allow Redis inbound traffic",
        "FromPort": 6379,
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroupRedisSecurityGroupC4CB74C2",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SecurityGroupEcsSecurityGroup292FFA35",
            "GroupId",
          ],
        },
        "ToPort": 6379,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "VpcC3027511": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "docmost-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGW488B0FEB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "docmost-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGW42EC8516": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcdocmostalbpublicSubnet1DefaultRoute02BA0EF9": {
      "DependsOn": [
        "VpcVPCGW42EC8516",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "RouteTableId": {
          "Ref": "VpcdocmostalbpublicSubnet1RouteTable9242B839",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcdocmostalbpublicSubnet1EIPFA11D5C5": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-alb-publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcdocmostalbpublicSubnet1NATGatewayFF2009F0": {
      "DependsOn": [
        "VpcdocmostalbpublicSubnet1DefaultRoute02BA0EF9",
        "VpcdocmostalbpublicSubnet1RouteTableAssociation365EBB9B",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcdocmostalbpublicSubnet1EIPFA11D5C5",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcdocmostalbpublicSubnet1SubnetFC575E94",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-alb-publicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcdocmostalbpublicSubnet1RouteTable9242B839": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-alb-publicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostalbpublicSubnet1RouteTableAssociation365EBB9B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostalbpublicSubnet1RouteTable9242B839",
        },
        "SubnetId": {
          "Ref": "VpcdocmostalbpublicSubnet1SubnetFC575E94",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostalbpublicSubnet1SubnetFC575E94": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-alb-public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-alb-publicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdocmostalbpublicSubnet2DefaultRouteB9ADC6AE": {
      "DependsOn": [
        "VpcVPCGW42EC8516",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGW488B0FEB",
        },
        "RouteTableId": {
          "Ref": "VpcdocmostalbpublicSubnet2RouteTable266CA91C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcdocmostalbpublicSubnet2RouteTable266CA91C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-alb-publicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostalbpublicSubnet2RouteTableAssociation64E2E566": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostalbpublicSubnet2RouteTable266CA91C",
        },
        "SubnetId": {
          "Ref": "VpcdocmostalbpublicSubnet2Subnet548F5D83",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostalbpublicSubnet2Subnet548F5D83": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-alb-public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-alb-publicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdocmostecsegressSubnet1DefaultRoute0D55DFA6": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcdocmostalbpublicSubnet1NATGatewayFF2009F0",
        },
        "RouteTableId": {
          "Ref": "VpcdocmostecsegressSubnet1RouteTableACD61D18",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcdocmostecsegressSubnet1RouteTableACD61D18": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-ecs-egressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostecsegressSubnet1RouteTableAssociation29F3FD06": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostecsegressSubnet1RouteTableACD61D18",
        },
        "SubnetId": {
          "Ref": "VpcdocmostecsegressSubnet1Subnet612D76E4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostecsegressSubnet1Subnet612D76E4": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-ecs-egress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-ecs-egressSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdocmostecsegressSubnet2DefaultRouteC2DAEA45": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcdocmostalbpublicSubnet1NATGatewayFF2009F0",
        },
        "RouteTableId": {
          "Ref": "VpcdocmostecsegressSubnet2RouteTableED0EEEF3",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcdocmostecsegressSubnet2RouteTableAssociation8220FEDB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostecsegressSubnet2RouteTableED0EEEF3",
        },
        "SubnetId": {
          "Ref": "VpcdocmostecsegressSubnet2SubnetB64E2924",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostecsegressSubnet2RouteTableED0EEEF3": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-ecs-egressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostecsegressSubnet2SubnetB64E2924": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-ecs-egress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-ecs-egressSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdocmostrdsisolatedSubnet1RouteTableAssociation27DA994E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostrdsisolatedSubnet1RouteTableF0ED0ECC",
        },
        "SubnetId": {
          "Ref": "VpcdocmostrdsisolatedSubnet1Subnet2BB5246C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostrdsisolatedSubnet1RouteTableF0ED0ECC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-rds-isolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostrdsisolatedSubnet1Subnet2BB5246C": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.0.6.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-rds-isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-rds-isolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdocmostrdsisolatedSubnet2RouteTableAssociationC0811930": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostrdsisolatedSubnet2RouteTableD73002A0",
        },
        "SubnetId": {
          "Ref": "VpcdocmostrdsisolatedSubnet2Subnet9A4751A4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostrdsisolatedSubnet2RouteTableD73002A0": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-rds-isolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostrdsisolatedSubnet2Subnet9A4751A4": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.0.7.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-rds-isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-rds-isolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdocmostredisisolatedSubnet1RouteTable4C093583": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-redis-isolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostredisisolatedSubnet1RouteTableAssociationA29ABB45": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostredisisolatedSubnet1RouteTable4C093583",
        },
        "SubnetId": {
          "Ref": "VpcdocmostredisisolatedSubnet1SubnetD8CA56D5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostredisisolatedSubnet1SubnetD8CA56D5": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1a",
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-redis-isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-redis-isolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcdocmostredisisolatedSubnet2RouteTable5E628D46": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-redis-isolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcdocmostredisisolatedSubnet2RouteTableAssociation189F658C": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcdocmostredisisolatedSubnet2RouteTable5E628D46",
        },
        "SubnetId": {
          "Ref": "VpcdocmostredisisolatedSubnet2SubnetFCD71DBC",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcdocmostredisisolatedSubnet2SubnetFCD71DBC": {
      "Properties": {
        "AvailabilityZone": "ap-northeast-1c",
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "docmost-redis-isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "DocmostStack/Vpc/Vpc/docmost-redis-isolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcC3027511",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
